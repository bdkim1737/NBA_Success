x <- c(4, 10, 20)
x <- c(4, 10, 20)
q()
library(lubridate)
library(mowateR)
devtools::install_github('rachwhatsit/mowater_pkg', subdir = 'mowateR')
library(lubridate)
library(mowateR)
#devtools::install_github('rachwhatsit/mowater_pkg', subdir = 'mowateR')
library(lubridate)
library(mowateR)
data(boulder_amnomia)
data(boulder_ammomia)
data(boulder_ammonia)
data(boulder_amnonia)
data(boulder_ammonia)
library(mowateR)
data(boulder_ammonia)
save.image('dat.Rdata')
load(file="dat/boulder_ammonia.rda")
setwd(C:\Users\Benjamin Student\Documents\Intro to DS\Lecture06_06_AH_DN-20230906T130710Z-001\Lecture06_06_AH_DN)
setwd(C://Users//Benjamin Student//Documents//Intro to DS//Lecture06_06_AH_DN-20230906T130710Z-001//Lecture06_06_AH_DN)
setwd(C:\Users\Benjamin Student\Documents\Intro to DS\Lecture06_06_AH_DN-20230906T130710Z-001\Lecture06_06_AH_DN)
View(boulder_ammonia)
View(boulder_ammonia)
class(data)
dim(data)
colnames(data)
View(data)
head(data)
help('boulder_amnonia')
class(data)
dim(data)
colnames(data)
View(data)
head(data)
help('boulder_ammonia')
library(mowateR)
data(boulder_ammonia)
save.image('dat.Rdata')
class(data)
dim(data)
colnames(data)
View(data)
head(data)
help('boulder_ammonia')
library(mowateR)
data <- data(boulder_ammonia)
save.image('dat.Rdata')
class(data)
dim(data)
colnames(data)
View(data)
head(data)
help('boulder_ammonia')
class(boulder_ammonia)
dim(data)
colnames(data)
View(data)
head(data)
help('boulder_ammonia')
load(file="dat/boulder_ammonia.rda")
load(file="C:\Users\Benjamin Student\Documents\Intro to DS\Lecture06_06_AH_DN-20230906T130710Z-001\Lecture06_06_AH_DN\dat\boulder_ammonia.rda")
load(file="C://Users//Benjamin Student//Documents//Intro to DS//Lecture06_06_AH_DN-20230906T130710Z-001//Lecture06_06_AH_DN//dat//boulder_ammonia.rda")
load('dat.Rdata')
data <- boulder_ammonia
class(data)
dim(data)
colnames(data)
View(data)
head(data)
help('boulder_ammonia')
#load(file="C://Users//Benjamin Student//Documents//Intro to DS//Lecture06_06_AH_DN-20230906T130710Z-001//Lecture06_06_AH_DN//dat//boulder_ammonia.rda")
load('dat.Rdata')
rm(data)
save.image("C:/Users/Benjamin Student/Documents/Intro to DS/Lecture06_06_AH_DN-20230906T130710Z-001/Lecture06_06_AH_DN/newdat.RData")
class(data)
dim(data)
colnames(data)
#View(data)
head(data)
#help('boulder_ammonia')
load(file="C://Users//Benjamin Student//Documents//Intro to DS//Lecture06_06_AH_DN-20230906T130710Z-001//Lecture06_06_AH_DN//dat//boulder_ammonia.rda")
load('newdat.RData')
knitr::opts_chunk$set(echo = TRUE)
covid <- read.csv(file="dat/CDPHE_COVID19_Wastewater_Dashboard_Data.csv", header=T)
class(covid)
head(covid)
dim(covid)
# Remove the  redundant last column
covid <- covid[ , -5]
# Replace the existing names with the names `sars_rna_copies` and `new_covid_cases`.
colnames(covid) <- c("Date", "Utility", "sars_rna_copies", "new_covid_cases")
# Filter the data so that only non-NA `sars_rna_copies` are present AND all
# `new_covid_cases` are 5 or greater.
covid_filter <- covid[(is.na(covid$sars_rna_copies)==FALSE) & (covid$new_covid_cases>=5) , ]
# Recall that you can also filter the data to obtain a specific utility's observations.
# This could be helpful.
covid_boulder <- covid_filter[covid_filter$Utility == "Boulder", ]
plot(log(covid_filter$sars_rna_copies),  log(covid_filter$new_covid_cases) , type="n",
main = "All Utilities:  Wastewater RNA vs COVID-19 Cases",
xlab="log(SARS-CoV-2 Copies/L)",
ylab="log(New Covid-19 Cases)")
ut_metro <- covid[which(covid$Utility == "Metro Wastewater RWHTF - PRC"), ]
points(log(ut_metro$sars_rna_copies),  log(ut_metro$new_covid_cases), col = "green")
ut_JDP <- covid[which(covid$Utility == "CO Springs - JD Phillips"), ]
points(log(ut_JDP$sars_rna_copies),  log(ut_JDP$new_covid_cases), col = "red")
ut_LV <- covid[which(covid$Utility == "CO Springs - Las Vegas"), ]
points(log(ut_LV$sars_rna_copies),  log(ut_LV$new_covid_cases), col = "blue")
ut_Pueblo <- covid[which(covid$Utility == "Pueblo"), ]
points(log(ut_Pueblo$sars_rna_copies),  log(ut_Pueblo$new_covid_cases), col = "black")
# You now know how to also add a straight line to this plot, as follows:
# Note, a 1 is added to the log of the SARS-CoV-2 RNA because log(0) = -Inf and log(1) = 0
# You can test what happens if the "+ 1" is removed.
#abline(lm(log(covid_filter$new_covid_cases)~log(covid_filter$sars_rna_copies + 1)))
library(shiny)
install.packages("shiny")
library(shiny)
runExample('01_hello')
setwd("C:/Users/Benjamin Student/Documents/Possible R Project")
#bring in library dplyr
library(dplyr)
#read csv files and bring out columns which will get in the way of the rbind function
NBA1 <- read.csv("NBA_Player_Stats.csv")
NBA2 <- read.csv("NBA_Player_Stats_2.csv")
NBA2$MVP <- NULL
names(NBA2)[names(NBA2) == "Season"] <- "Year"
#rbind and concatenate to only necessary stats (NBA)
rawNBA <- rbind(NBA1, NBA2)
NBAcon <- rawNBA[,-c(0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31)]
#averaging the stats into one column by player name
NBAstat <- NBAcon %>%
group_by(Player) %>%
summarize(
Pos = last(Pos),
across(where(is.numeric), ~ round(mean(., na.rm = TRUE), 3)),
.groups = "drop"
)
#rbind and concatenate to only necessary stats (college)
college2016 <- read.csv("sportsref_download.csv")
college2016 <- college2016[-1, ]
college2014 <- read.csv("sportsref_download2014.csv")
college2014 <- college2014[-1, ]
college2015 <- read.csv("sportsref_download2015.csv")
college2015 <- college2015[-1, ]
college2017 <- read.csv("sportsref_download2017.csv")
college2017 <- college2017[-1, ]
college2018 <- read.csv("sportsref_download2018.csv")
college2018 <- college2018[-1, ]
college2014_2018 <- rbind(college2014, college2015, college2016, college2017, college2018)
colcon <- college2014_2018[,-c(0,1,2,3,5,6,7,8,9,10,11,14,20,22)]
#Changing column names and getting rid of first row that was acting like a column title
names(colcon)[names(colcon) == "Round.1"] <- "Player"
names(colcon)[names(colcon) == "Shooting"] <- "FG%"
names(colcon)[names(colcon) == "X.9"] <- "3P%"
names(colcon)[names(colcon) == "Per.Game"] <- "MP"
names(colcon)[names(colcon) == "X.11"] <- "PTS"
names(colcon)[names(colcon) == "X.12"] <- "TRB"
names(colcon)[names(colcon) == "X.13"] <- "AST"
names(colcon)[names(colcon) == "Advanced"] <- "WS"
names(colcon)[names(colcon) == "X.15"] <- "BPM"
#Getting rid of players not in both of datasets
common_players <- inner_join(NBAstat, colcon, by = "Player") %>%
select(Player)
# Filter both datasets to include only common players
NBAstat <- NBAstat %>%
semi_join(common_players, by = "Player")
colcon <- colcon %>%
semi_join(common_players, by = "Player")
#bring in library dplyr
library(dplyr)
#read csv files and bring out columns which will get in the way of the rbind function
NBA1 <- read.csv("NBA_Player_Stats.csv")
NBA2 <- read.csv("NBA_Player_Stats_2.csv")
NBA2$MVP <- NULL
names(NBA2)[names(NBA2) == "Season"] <- "Year"
#rbind and concatenate to only necessary stats (NBA)
rawNBA <- rbind(NBA1, NBA2)
NBAcon <- rawNBA[,-c(0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31)]
#averaging the stats into one column by player name
NBAstat <- NBAcon %>%
group_by(Player) %>%
summarize(
Pos = last(Pos),
across(where(is.numeric), ~ round(mean(., na.rm = TRUE), 3)),
.groups = "drop"
)
#rbind and concatenate to only necessary stats (college)
college2016 <- read.csv("sportsref_download.csv")
college2016 <- college2016[-1, ]
college2014 <- read.csv("sportsref_download2014.csv")
college2014 <- college2014[-1, ]
college2015 <- read.csv("sportsref_download2015.csv")
college2015 <- college2015[-1, ]
college2017 <- read.csv("sportsref_download2017.csv")
college2017 <- college2017[-1, ]
college2018 <- read.csv("sportsref_download2018.csv")
college2018 <- college2018[-1, ]
college2014_2018 <- rbind(college2014, college2015, college2016, college2017, college2018)
colcon <- college2014_2018[,-c(0,1,2,3,5,6,7,8,9,10,11,14,20,22)]
#Changing column names and getting rid of first row that was acting like a column title
names(colcon)[names(colcon) == "Round.1"] <- "Player"
names(colcon)[names(colcon) == "Shooting"] <- "FG%"
names(colcon)[names(colcon) == "X.9"] <- "3P%"
names(colcon)[names(colcon) == "Per.Game"] <- "MP"
names(colcon)[names(colcon) == "X.11"] <- "PTS"
names(colcon)[names(colcon) == "X.12"] <- "TRB"
names(colcon)[names(colcon) == "X.13"] <- "AST"
names(colcon)[names(colcon) == "Advanced"] <- "WS"
names(colcon)[names(colcon) == "X.15"] <- "BPM"
#Getting rid of players not in both of datasets
common_players <- inner_join(NBAstat, colcon, by = "Player") %>%
select(Player)
# Filter both datasets to include only common players
NBAstat <- NBAstat %>%
semi_join(common_players, by = "Player")
colcon <- colcon %>%
semi_join(common_players, by = "Player")
